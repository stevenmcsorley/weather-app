{
  "version": 3,
  "sources": ["../../../app/routes/demotwo.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/demotwo.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/demotwo.tsx\");\n  import.meta.hot.lastModified = \"1721262749584.6235\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport async function action({\n  request\n}) {\n  await fakeDelay(1000);\n  return json({\n    success: true\n  });\n}\nfunction fakeDelay(ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\nexport default function Demo() {\n  _s();\n  const data = useActionData();\n  console.log(\"actiondata\", data?.success);\n  return <div>\r\n      <h1>HTML Form</h1>\r\n      <form method=\"post\">\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" name=\"name\" />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <h1>Remix Form</h1>\r\n      <Form method=\"post\">\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" name=\"name\" />\r\n        <button type=\"submit\">Submit</button>\r\n      </Form>\r\n    </div>;\n}\n_s(Demo, \"EuQJlwp+1/dClAy+OhUaWQ2c6r8=\", false, function () {\n  return [useActionData];\n});\n_c = Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAqBf;AAzCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6BAA+B,EAAE;AAAA,EAC1E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAmBe,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,UAAQ,IAAI,cAAc,6BAAM,OAAO;AACvC,SAAO,mDAAC,SACJ;AAAA,uDAAC,QAAG,yBAAJ;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,IACb,mDAAC,UAAK,QAAO,QACX;AAAA,yDAAC,WAAM,SAAQ,QAAO,qBAAtB;AAAA;AAAA;AAAA;AAAA,aAA2B;AAAA,MAC3B,mDAAC,WAAM,MAAK,QAAO,IAAG,QAAO,MAAK,UAAlC;AAAA;AAAA;AAAA;AAAA,aAAyC;AAAA,MACzC,mDAAC,YAAO,MAAK,UAAS,sBAAtB;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,SAH9B;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,QAAG,0BAAJ;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,IACd,mDAAC,QAAK,QAAO,QACX;AAAA,yDAAC,WAAM,SAAQ,QAAO,qBAAtB;AAAA;AAAA;AAAA;AAAA,aAA2B;AAAA,MAC3B,mDAAC,WAAM,MAAK,QAAO,IAAG,QAAO,MAAK,UAAlC;AAAA;AAAA;AAAA;AAAA,aAAyC;AAAA,MACzC,mDAAC,YAAO,MAAK,UAAS,sBAAtB;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,SAH9B;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAZG;AAAA;AAAA;AAAA;AAAA,SAaL;AACJ;AACA,GAAG,MAAM,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
