{
  "version": 3,
  "sources": ["../../../app/components/PostList.tsx", "../../../app/routes/posts._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/PostList.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/PostList.tsx\");\n  import.meta.hot.lastModified = \"1721259035366.6885\";\n}\n// REMIX HMR END\n\nimport { Container, Grid, Card, CardContent, Typography, Link } from \"@mui/material\";\nexport default function PostList({\n  posts\n}) {\n  const post = posts.sort((a, b) => {\n    return b.id - a.id;\n  });\n  return <Container>\r\n      <Grid container spacing={4}>\r\n        {post.length === 0 && <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                  No posts found\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>}\r\n        {posts.map(post => <Grid item key={post.id} xs={12} md={post.id < posts.length ? 6 : 12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                  <Link href={`/posts/${post.slug}`} underline=\"none\">\r\n                    {post.title}\r\n                  </Link>\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {post.subtitle}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {post.content}\r\n                </Typography>\r\n                <div>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    {post.author}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\" style={{\n                marginLeft: \"1rem\"\n              }}>\r\n                    {post.date}\r\n                  </Typography>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>)}\r\n      </Grid>\r\n    </Container>;\n}\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/posts._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/posts._index.tsx\");\n  import.meta.hot.lastModified = \"1721252584276.3738\";\n}\n// REMIX HMR END\n\nimport { useMatches } from \"@remix-run/react\";\nimport PostList from \"~/components/PostList\";\nimport { Container, Grid, Typography } from \"@mui/material\";\nexport default function PostsLandingPage() {\n  _s();\n  const matches = useMatches();\n  const posts = matches[1].data;\n  return <Container>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Posts\r\n      </Typography>\r\n      <Grid container spacing={4} marginTop={4}>\r\n        <PostList posts={posts} />\r\n      </Grid>\r\n    </Container>;\n}\n_s(PostsLandingPage, \"9HQn1rkLPttBP+QSK6GDQicXTV4=\", false, function () {\n  return [useMatches];\n});\n_c = PostsLandingPage;\nvar _c;\n$RefreshReg$(_c, \"PostsLandingPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["post", "import_jsx_dev_runtime", "_c"]
}
